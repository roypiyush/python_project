import os
import sys

import matplotlib.pyplot as plt
import numpy as np

data_1 = [26.370, 27.032, 109.636, 28.300, 26.561, 27.369, 25.730, 26.111, 26.996, 32.229, 32.428, 26.193, 25.667,
          29.271, 28.097, 45.805, 27.482, 27.222, 28.239, 50.991, 25.935, 28.753, 27.825, 26.204, 32.676, 25.996,
          35.044, 25.934, 26.449, 25.552, 26.455, 25.480, 25.929, 27.882, 25.585, 38.376, 26.399, 36.098, 26.565,
          27.806, 25.544, 25.425, 26.255, 25.412, 25.624, 31.185, 28.554, 41.265, 31.704, 31.663, 25.716, 51.562,
          32.728, 31.914, 25.466, 25.816, 30.455, 76.798, 33.753, 25.398, 39.856, 25.604, 113.878, 27.533, 25.413,
          25.460, 25.660, 25.548, 26.053, 25.347, 38.370, 25.735, 25.541, 92.165, 37.370, 26.816, 25.452, 26.670,
          27.147, 37.382, 34.996, 40.116, 32.235, 32.427, 32.747, 31.730, 173.561, 100.735, 147.527, 25.640, 26.013,
          36.267, 65.247, 25.900, 25.978, 31.875, 32.610, 32.239, 31.862, 33.025, 32.216, 34.982, 32.786, 31.902,
          60.392, 26.255, 34.708, 30.594, 37.102, 32.566, 44.755, 32.003, 32.429, 41.711, 28.169, 27.398, 30.356,
          32.597, 31.953, 32.127, 32.185, 28.416, 32.050, 27.146, 25.444, 29.544, 31.728, 32.373, 34.038, 31.940,
          31.778, 25.884, 33.749, 26.038, 32.095, 45.271, 25.412, 25.574, 32.203, 28.691, 33.970, 30.793, 32.462,
          32.404, 25.532, 32.552, 25.424, 36.166, 26.056, 25.655, 32.004, 26.594, 25.543, 25.933, 25.698, 33.806,
          54.832, 28.334, 34.145, 27.117, 60.934, 27.770, 28.480, 51.489, 33.220, 32.486, 45.155, 26.331, 33.339,
          73.701, 25.725, 26.242, 124.982, 34.060, 33.750, 34.508, 35.752, 35.667, 38.152, 35.624, 35.566, 35.656,
          35.655, 35.704, 35.894, 36.043, 35.833, 35.998, 36.106, 37.108, 35.532, 36.134, 35.745, 36.017, 35.634,
          35.720, 35.887, 35.747, 35.625, 35.650]

data_2 = [42.398, 27.455, 111.459, 103.927, 46.954, 173.064, 148.668, 116.871, 43.642, 57.371, 100.076, 140.605, 46.564,
          55.073, 62.196, 102.627, 41.800, 924.243, 58.707, 93.451, 47.369, 110.244, 75.634, 66.088, 47.772, 38.385,
          30.734, 49.804, 90.288, 127.026, 66.591, 67.001, 52.561, 86.716, 54.027, 87.380, 33.714, 38.543, 34.159,
          68.184, 43.632, 55.479, 55.878, 49.126, 55.819, 84.381, 40.282, 51.982, 79.944, 144.102, 48.549, 41.612,
          29.329, 100.524, 53.849, 77.299, 88.825, 149.043, 77.519, 65.064, 89.939, 37.299, 148.678, 63.763, 53.422,
          94.278, 57.190, 59.354, 51.120, 71.128, 80.440, 44.321, 75.584, 56.010, 76.808, 38.914, 53.023, 32.565,
          32.983, 34.260, 74.972, 38.054, 37.898, 39.835, 52.153, 68.929, 41.757, 66.749, 42.539, 48.926, 41.144,
          66.239, 80.313, 66.748, 60.265, 122.621, 50.047, 56.211, 32.839, 103.829, 50.077, 72.354, 41.661, 127.939,
          51.986, 117.002, 33.414, 55.306, 112.354, 97.537, 36.440, 55.301, 65.409, 112.076, 82.279, 53.850, 47.654,
          122.789, 127.918, 47.644, 55.350, 89.814, 27.697, 85.197, 84.875, 32.334, 63.613, 69.377, 48.136, 39.859,
          100.826, 55.055, 83.699, 84.712, 100.903, 45.693, 100.709, 43.850, 43.542, 97.129, 61.074, 48.506, 51.631,
          35.282, 39.171, 39.769, 69.259, 66.668, 43.877, 27.041, 26.714, 46.664, 47.661, 41.471, 140.350, 33.543,
          58.749, 47.646, 76.557, 73.189, 75.630, 39.037, 27.772, 35.389, 126.164, 59.647, 53.281, 102.477, 47.426,
          59.933, 50.830, 49.360, 60.421, 55.049, 51.579, 52.443, 48.108, 42.711, 48.813, 47.010, 58.708, 53.283,
          56.366, 48.175, 40.350, 82.838, 45.162, 59.697, 46.784, 36.195, 45.381, 54.043, 77.278, 83.034, 51.448,
          70.502, 44.955, 47.636, 67.050, 38.244, 73.039, 36.478]

data_3 = [26.585, 49.489, 27.421, 25.840, 26.729, 25.782, 33.422, 27.429, 28.402, 30.673, 27.204, 27.954, 33.249,
          33.669, 39.528, 36.026, 26.912, 30.239, 25.939, 26.420, 26.759, 26.637, 31.109, 30.026, 26.732, 45.010,
          25.806, 32.037, 26.833, 25.736, 46.671, 37.945, 43.574, 32.533, 147.887, 142.484, 36.452, 135.500, 26.592,
          37.503, 35.914, 44.293, 32.559, 26.387, 66.560, 35.241, 37.094, 34.073, 25.880, 26.201, 36.399, 32.510,
          36.979, 36.947, 31.801, 32.062, 40.025, 35.720, 31.400, 37.200, 30.936, 27.108, 64.842, 67.536, 28.276,
          26.060, 49.800, 42.964, 31.749, 33.828, 26.079, 25.953, 25.857, 40.414, 25.948, 28.318, 35.787, 32.055,
          36.867, 29.046, 33.945, 26.311, 33.028, 25.720, 33.542, 32.296, 32.911, 32.235, 32.372, 26.858, 33.788,
          33.178, 62.085, 90.007, 34.000, 25.892, 32.468, 45.280, 40.864, 33.207, 27.325, 38.647, 37.315, 28.007,
          32.826, 28.420, 68.597, 31.312, 30.115, 32.601, 33.502, 30.461, 28.312, 32.646, 32.755, 45.212, 32.902,
          29.672, 34.062, 33.180, 30.666, 26.493, 30.905, 34.150, 26.595, 35.391, 36.055, 31.307, 33.706, 33.623,
          41.387, 70.351, 97.443, 152.796, 79.980, 33.888, 25.589, 28.393, 25.763, 33.850, 26.857, 25.488, 32.458,
          26.611, 25.992, 42.509, 35.381, 35.916, 27.844, 32.400, 32.923, 36.886, 32.925, 34.998, 38.024, 51.301,
          64.162, 34.402, 64.967, 36.744, 34.399, 26.644, 32.412, 32.138, 25.635, 27.316, 32.230, 26.176, 32.009,
          25.622, 26.530, 35.685, 29.154, 32.233, 34.153, 32.161, 33.167, 30.655, 35.975, 25.836, 33.009, 35.209,
          31.186, 43.345, 31.997, 27.083, 26.601, 30.750, 29.308, 37.004, 26.894, 31.832, 32.645, 98.625, 31.992,
          30.594, 26.073, 32.207, 31.931, 32.690]


def create_np_array(data):
    array = np.array(data).astype(np.float64)
    return array


def scatter_plot(axes, array):
    axes[0].set_title("Ping Scatter")
    axes[0].plot(array, 'r.')


def histo(axes, array):
    axes[1].set_title("Ping Histo")
    axes[1].hist(array, color='#5ABCE6',
                 bins=np.arange(array.min(), array.max() + 1, 0.5, np.float64))


def create_graphs(data, idx):
    array = create_np_array(data)
    figure, axes = plt.subplots(2, 1)
    graph_title = "Ping Graphs" + "_" + str(idx + 1)
    figure.canvas.set_window_title(graph_title)
    figure.suptitle(graph_title)
    scatter_plot(axes, array)
    histo(axes, array)


if __name__ == '__main__':
    data_list = [data_1, data_2, data_3]
    for idx, data in enumerate(data_list):
        create_graphs(data, idx)
    plt.show()
